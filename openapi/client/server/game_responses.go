// Code generated by go-swagger; DO NOT EDIT.

package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GameReader is a Reader for the Game structure.
type GameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGameOK creates a GameOK with default headers values
func NewGameOK() *GameOK {
	return &GameOK{}
}

/*
GameOK describes a response with status code 200, with default header values.

success and returns some html text
*/
type GameOK struct {
	Payload string
}

// IsSuccess returns true when this game o k response has a 2xx status code
func (o *GameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this game o k response has a 3xx status code
func (o *GameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this game o k response has a 4xx status code
func (o *GameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this game o k response has a 5xx status code
func (o *GameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this game o k response a status code equal to that given
func (o *GameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the game o k response
func (o *GameOK) Code() int {
	return 200
}

func (o *GameOK) Error() string {
	return fmt.Sprintf("[GET /Game][%d] gameOK  %+v", 200, o.Payload)
}

func (o *GameOK) String() string {
	return fmt.Sprintf("[GET /Game][%d] gameOK  %+v", 200, o.Payload)
}

func (o *GameOK) GetPayload() string {
	return o.Payload
}

func (o *GameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGameInternalServerError creates a GameInternalServerError with default headers values
func NewGameInternalServerError() *GameInternalServerError {
	return &GameInternalServerError{}
}

/*
GameInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GameInternalServerError struct {
}

// IsSuccess returns true when this game internal server error response has a 2xx status code
func (o *GameInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this game internal server error response has a 3xx status code
func (o *GameInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this game internal server error response has a 4xx status code
func (o *GameInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this game internal server error response has a 5xx status code
func (o *GameInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this game internal server error response a status code equal to that given
func (o *GameInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the game internal server error response
func (o *GameInternalServerError) Code() int {
	return 500
}

func (o *GameInternalServerError) Error() string {
	return fmt.Sprintf("[GET /Game][%d] gameInternalServerError ", 500)
}

func (o *GameInternalServerError) String() string {
	return fmt.Sprintf("[GET /Game][%d] gameInternalServerError ", 500)
}

func (o *GameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
