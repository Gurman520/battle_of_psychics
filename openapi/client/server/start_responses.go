// Code generated by go-swagger; DO NOT EDIT.

package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// StartReader is a Reader for the Start structure.
type StartReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StartReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStartOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewStartInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewStartOK creates a StartOK with default headers values
func NewStartOK() *StartOK {
	return &StartOK{}
}

/*
StartOK describes a response with status code 200, with default header values.

success and returns some html text
*/
type StartOK struct {
	Payload string
}

// IsSuccess returns true when this start o k response has a 2xx status code
func (o *StartOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this start o k response has a 3xx status code
func (o *StartOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start o k response has a 4xx status code
func (o *StartOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this start o k response has a 5xx status code
func (o *StartOK) IsServerError() bool {
	return false
}

// IsCode returns true when this start o k response a status code equal to that given
func (o *StartOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the start o k response
func (o *StartOK) Code() int {
	return 200
}

func (o *StartOK) Error() string {
	return fmt.Sprintf("[GET /Start][%d] startOK  %+v", 200, o.Payload)
}

func (o *StartOK) String() string {
	return fmt.Sprintf("[GET /Start][%d] startOK  %+v", 200, o.Payload)
}

func (o *StartOK) GetPayload() string {
	return o.Payload
}

func (o *StartOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartInternalServerError creates a StartInternalServerError with default headers values
func NewStartInternalServerError() *StartInternalServerError {
	return &StartInternalServerError{}
}

/*
StartInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type StartInternalServerError struct {
}

// IsSuccess returns true when this start internal server error response has a 2xx status code
func (o *StartInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start internal server error response has a 3xx status code
func (o *StartInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start internal server error response has a 4xx status code
func (o *StartInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this start internal server error response has a 5xx status code
func (o *StartInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this start internal server error response a status code equal to that given
func (o *StartInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the start internal server error response
func (o *StartInternalServerError) Code() int {
	return 500
}

func (o *StartInternalServerError) Error() string {
	return fmt.Sprintf("[GET /Start][%d] startInternalServerError ", 500)
}

func (o *StartInternalServerError) String() string {
	return fmt.Sprintf("[GET /Start][%d] startInternalServerError ", 500)
}

func (o *StartInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
