// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Service The battle of psychics",
    "title": "battle",
    "version": "1.0.0"
  },
  "paths": {
    "/Conceive": {
      "get": {
        "security": [
          {
            "key": []
          }
        ],
        "tags": [
          "server"
        ],
        "operationId": "conceive",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Response%D0%A1onceive"
              }
            }
          }
        }
      }
    },
    "/Result": {
      "post": {
        "security": [
          {
            "key": []
          }
        ],
        "tags": [
          "server"
        ],
        "operationId": "result",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RResult"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Psychics"
              }
            }
          }
        }
      }
    },
    "/Session": {
      "get": {
        "security": [
          {}
        ],
        "tags": [
          "server"
        ],
        "operationId": "getSession",
        "responses": {
          "200": {
            "description": "Success create session",
            "schema": {
              "$ref": "#/definitions/ResponseSession"
            }
          }
        }
      }
    },
    "/healthCheck": {
      "get": {
        "security": [
          {}
        ],
        "tags": [
          "Standard"
        ],
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Psychics": {
      "type": "object",
      "properties": {
        "reliability": {
          "type": "integer"
        }
      }
    },
    "RResult": {
      "type": "object",
      "properties": {
        "number": {
          "type": "integer"
        }
      }
    },
    "ResponseSession": {
      "type": "object",
      "properties": {
        "jwt": {
          "type": "string"
        }
      }
    },
    "ResponseСonceive": {
      "type": "object",
      "properties": {
        "hypothesis": {
          "type": "integer"
        }
      }
    },
    "error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "Either same as HTTP Status Code OR \u003e= 600.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "principal": {
      "type": "string"
    }
  },
  "securityDefinitions": {
    "key": {
      "type": "apiKey",
      "name": "x-token",
      "in": "header"
    }
  },
  "security": [
    {
      "key": []
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Service The battle of psychics",
    "title": "battle",
    "version": "1.0.0"
  },
  "paths": {
    "/Conceive": {
      "get": {
        "security": [
          {
            "key": []
          }
        ],
        "tags": [
          "server"
        ],
        "operationId": "conceive",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Response%D0%A1onceive"
              }
            }
          }
        }
      }
    },
    "/Result": {
      "post": {
        "security": [
          {
            "key": []
          }
        ],
        "tags": [
          "server"
        ],
        "operationId": "result",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RResult"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Psychics"
              }
            }
          }
        }
      }
    },
    "/Session": {
      "get": {
        "security": [
          {}
        ],
        "tags": [
          "server"
        ],
        "operationId": "getSession",
        "responses": {
          "200": {
            "description": "Success create session",
            "schema": {
              "$ref": "#/definitions/ResponseSession"
            }
          }
        }
      }
    },
    "/healthCheck": {
      "get": {
        "security": [
          {}
        ],
        "tags": [
          "Standard"
        ],
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Psychics": {
      "type": "object",
      "properties": {
        "reliability": {
          "type": "integer"
        }
      }
    },
    "RResult": {
      "type": "object",
      "properties": {
        "number": {
          "type": "integer"
        }
      }
    },
    "ResponseSession": {
      "type": "object",
      "properties": {
        "jwt": {
          "type": "string"
        }
      }
    },
    "ResponseСonceive": {
      "type": "object",
      "properties": {
        "hypothesis": {
          "type": "integer"
        }
      }
    },
    "error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "Either same as HTTP Status Code OR \u003e= 600.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "principal": {
      "type": "string"
    }
  },
  "securityDefinitions": {
    "key": {
      "type": "apiKey",
      "name": "x-token",
      "in": "header"
    }
  },
  "security": [
    {
      "key": []
    }
  ]
}`))
}
